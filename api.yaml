openapi: 3.0.0
servers:
  - url: http://127.0.0.1:5000
info:
  title: Bloglite
  version: 1.0.0
  description: A simple blog API
  contact:
    name: Ishant Jindal
    email: 21f1006421@student.onlinedegree.iitm.ac.in

paths:
  /api/user/username:
    get:
      summary: Get user by username
      description: Get user by username
      operationId: get_user_by_username
      parameters:
        - name: username
          in: query
          description: Username of the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update user by username
      description: Update user by username
      operationId: update_user_by_username
      parameters:
        - name: username
          in: query
          description: Username of the user
          required: true
          schema:
            type: string
      requestBody:
        description: User object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete user by username
      description: Delete user by username
      operationId: delete_user_by_username
      parameters:
        - name: username
          in: query
          description: Username of the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/user:
  post:
    summary: Create a new user
    description: Create a new user
    operationId: create_user
    requestBody:
      description: User object that needs to be added
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
    responses:
      '201':
        description: User created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      '409':
        description: User already exists
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      default:
        description: Unexpected error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'

  /api/post/post_id:
    get:
      summary: Get post by post_id
      description: Get post by post_id
      operationId: get_post_by_post_id
      parameters:
        - name: post_id
          in: query
          description: post_id of the post
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Post found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '404':
          description: Post not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update post by post_id
      description: Update post by post_id
      operationId: update_post_by_post_id
      parameters:
        - name: post_id
          in: query
          description: post_id of the post
          required: true
          schema:
            type: string
      requestBody:
        description: Post object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          description: Post updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '404':
          description: Post not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete post by post_id
      description: Delete post by post_id
      operationId: delete_post_by_post_id
      parameters:
        - name: post_id
          in: query
          description: post_id of the post
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Post deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '404':
          description: Post not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/post:
    post:
      summary: Create a new post
      description: Create a new post
      operationId: create_post
      requestBody:
        description: Post object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '201':
          description: Post created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '409':
          description: Post already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
